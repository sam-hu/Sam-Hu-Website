{"ast":null,"code":"import _slicedToArray from \"/Users/samhu/Repos/RyanSlama.com-V4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/samhu/Repos/RyanSlama.com-V4/src/App.tsx\";\nimport React, { useState } from 'react';\nimport Windows from './Windows';\nimport Home from './Home';\nimport Bluescreen from './Bluescreen';\nconst App = React.memo(function App() {\n  let _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentView = _useState2[0],\n      setCurrentView = _useState2[1];\n\n  const views = [/*#__PURE__*/React.createElement(Home, {\n    start: () => {\n      setCurrentView(1);\n      document.body.classList.add('containsWindows');\n      let i = setInterval(() => {\n        setCurrentView(2);\n      }, 25000);\n      let j = setInterval(() => {\n        setCurrentView(0);\n        clearInterval(i);\n        document.body.classList.remove('containsWindows');\n      }, 28000);\n      let k = setInterval(() => {\n        clearInterval(j);\n        clearInterval(k);\n      }, 30000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Windows, {\n    update: () => {\n      const killId = setTimeout(function () {\n        for (let i = killId; i > 0; i--) clearInterval(i);\n      }, 10);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Bluescreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })];\n  return views[currentView];\n});\nexport default App;","map":{"version":3,"sources":["/Users/samhu/Repos/RyanSlama.com-V4/src/App.tsx"],"names":["React","useState","Windows","Home","Bluescreen","App","memo","currentView","setCurrentView","views","document","body","classList","add","i","setInterval","j","clearInterval","remove","k","killId","setTimeout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,MAAMC,GAAG,GAAGL,KAAK,CAACM,IAAN,CACR,SAASD,GAAT,GAAe;AAAA,kBACyBJ,QAAQ,CAAC,CAAD,CADjC;AAAA;AAAA,MACNM,WADM;AAAA,MACOC,cADP;;AAEX,QAAMC,KAAK,GAAG,cACV,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,MAAM;AACfD,MAAAA,cAAc,CAAC,CAAD,CAAd;AACAE,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,iBAA5B;AACA,UAAIC,CAAC,GAAGC,WAAW,CAAC,MAAM;AAAEP,QAAAA,cAAc,CAAC,CAAD,CAAd;AAAmB,OAA5B,EAA8B,KAA9B,CAAnB;AACA,UAAIQ,CAAC,GAAGD,WAAW,CAAC,MAAM;AACtBP,QAAAA,cAAc,CAAC,CAAD,CAAd;AACAS,QAAAA,aAAa,CAACH,CAAD,CAAb;AACAJ,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBM,MAAxB,CAA+B,iBAA/B;AACH,OAJkB,EAIhB,KAJgB,CAAnB;AAKA,UAAIC,CAAC,GAAGJ,WAAW,CAAC,MAAM;AAAEE,QAAAA,aAAa,CAACD,CAAD,CAAb;AAAkBC,QAAAA,aAAa,CAACE,CAAD,CAAb;AAAkB,OAA7C,EAA+C,KAA/C,CAAnB;AACH,KAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,eAYV,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAE,MAAM;AACnB,YAAMC,MAAM,GAAGC,UAAU,CAAC,YAAY;AAClC,aAAK,IAAIP,CAAM,GAAGM,MAAlB,EAA0BN,CAAC,GAAG,CAA9B,EAAiCA,CAAC,EAAlC,EAAsCG,aAAa,CAACH,CAAD,CAAb;AACzC,OAFwB,EAEtB,EAFsB,CAAzB;AAGH,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZU,eAiBV,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBU,CAAd;AAoBA,SAAOL,KAAK,CAACF,WAAD,CAAZ;AACH,CAxBO,CAAZ;AA2BA,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Windows from './Windows';\nimport Home from './Home';\nimport Bluescreen from './Bluescreen';\n\n\nconst App = React.memo(\n    function App() {\n        let [currentView, setCurrentView] = useState(0);\n        const views = [\n            <Home start={() => {\n                setCurrentView(1);\n                document.body.classList.add('containsWindows');\n                let i = setInterval(() => { setCurrentView(2) }, 25000);\n                let j = setInterval(() => {\n                    setCurrentView(0);\n                    clearInterval(i);\n                    document.body.classList.remove('containsWindows');\n                }, 28000);\n                let k = setInterval(() => { clearInterval(j); clearInterval(k) }, 30000);\n            }} />,\n            <Windows update={() => {\n                const killId = setTimeout(function () {\n                    for (let i: any = killId; i > 0; i--) clearInterval(i)\n                }, 10);\n            }} />,\n            <Bluescreen />,\n        ]\n\n        return views[currentView];\n    }\n)\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}