{"ast":null,"code":"import _slicedToArray from \"/Users/samhu/Repos/RyanSlama.com-V4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/samhu/Repos/RyanSlama.com-V4/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/samhu/Repos/RyanSlama.com-V4/src/Windows.tsx\";\nimport React, { useState } from 'react';\nimport './Windows.scss';\nimport { Window } from './Window';\nimport { TaskBar } from './Taskbar';\nimport { TaskbarEntry } from './TaskbarEntry';\nimport { StartMenu } from './StartMenu';\nimport { Desktop } from './Desktop';\nimport { Programs } from './Programs'; // Brings a window to top by putting it in bottom of array\n\nfunction bringToTop(idx, arr) {\n  let topItem = arr.splice(idx, 1);\n  return [...arr, topItem[0]];\n}\n\nfunction _close(idx, arr) {\n  arr.splice(idx, 1); // Copy arr to trigger re-render\n\n  return [...arr];\n}\n\nfunction _minimize(idx, arr, shouldMinimize) {\n  let min = arr.splice(idx, 1);\n\n  let new_window = _objectSpread({}, min[0], {\n    isMinimized: shouldMinimize\n  });\n\n  return shouldMinimize ? [new_window, ...arr] : [...arr, new_window];\n}\n\nfunction _maximize(idx, arr) {\n  let min = arr.splice(idx, 1)[0];\n  let new_window = min.width === document.body.clientWidth ? _objectSpread({}, min, {\n    x: 100,\n    y: 100,\n    width: Programs[min.title].width,\n    height: Programs[min.title].height,\n    key: Math.random()\n  }) : _objectSpread({}, min, {\n    x: 0,\n    y: 0,\n    width: document.body.clientWidth,\n    height: document.body.clientHeight - 30,\n    key: Math.random()\n  });\n  return [...arr, new_window];\n}\n\nfunction _setPos(idx, arr, x, y) {\n  let min = arr.splice(idx, 1)[0];\n\n  let new_window = _objectSpread({}, min, {\n    x: x,\n    y: y\n  });\n\n  return [...arr, new_window];\n}\n\nfunction _setSize(idx, arr, x, y) {\n  let min = arr.splice(idx, 1)[0];\n\n  let new_window = _objectSpread({}, min, {\n    width: min.width + x,\n    height: min.height + y\n  });\n\n  return [...arr, new_window];\n}\n\nfunction _launch(arr, title) {\n  let new_window = _objectSpread({\n    title: title,\n    isMinimized: false,\n    x: 100,\n    y: 100\n  }, Programs[title], {\n    key: Math.random()\n  });\n\n  return [...arr, new_window];\n}\n\nconst Windows = props => {\n  const _useState = useState([_objectSpread({\n    height: 400,\n    isMinimized: false,\n    key: Math.random(),\n    title: \"Internet Explorer\"\n  }, Programs[\"Internet Explorer\"], {\n    x: document.body.clientWidth * 0.5,\n    y: 52\n  }), _objectSpread({\n    height: 400,\n    isMinimized: false,\n    key: Math.random(),\n    title: \"Notepad\"\n  }, Programs[\"Notepad\"], {\n    x: document.body.clientWidth / 15,\n    y: 405\n  }), _objectSpread({\n    title: \"Getting Started\",\n    isMinimized: false,\n    x: document.body.clientWidth * 0.3,\n    y: 200\n  }, Programs[\"Getting Started\"], {\n    key: Math.random()\n  })]),\n        _useState2 = _slicedToArray(_useState, 2),\n        windows = _useState2[0],\n        setWindows = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showStartMenu = _useState4[0],\n        setShowStartMenu = _useState4[1];\n\n  const toggleStart = () => setShowStartMenu(!showStartMenu);\n\n  function getReducer(i) {\n    return action => {\n      console.log(action.type);\n      console.log(i);\n      setShowStartMenu(false);\n      const resolvers = {\n        \"update\": () => {\n          props.update();\n          return _close(i, windows);\n        },\n        \"close\": () => _close(i, windows),\n        \"maximize\": () => _maximize(i, windows),\n        \"minimize\": () => _minimize(i, windows, true),\n        \"unminimize\": () => _minimize(i, windows, false),\n        \"getFocus\": () => bringToTop(i, windows),\n        \"setPos\": () => {\n          const posAction = action;\n          return _setPos(i, windows, posAction.x, posAction.y);\n        },\n        \"setSize\": () => {\n          const sizeAction = action;\n          return _setSize(i, windows, sizeAction.width, sizeAction.height);\n        },\n        \"launch\": () => {\n          const launchAction = action;\n          return _launch(windows, launchAction.title);\n        }\n      };\n      action.type in resolvers && setWindows(resolvers[action.type]());\n    };\n  }\n\n  const visibileWindows = windows.filter(w => !w.isMinimized);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Windows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, visibileWindows.map((w, i) => /*#__PURE__*/React.createElement(Window, Object.assign({}, w, {\n    isActive: i === visibileWindows.length - 1,\n    key: w.key,\n    f: getReducer(windows.findIndex(w2 => w2.key === w.key)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Desktop, {\n    reducer: getReducer(-1),\n    hideStartMenu: () => setShowStartMenu(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TaskBar, {\n    startActive: showStartMenu,\n    toggleStart: toggleStart,\n    f: getReducer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, [...windows].map((w, i) => {\n    return {\n      index: i,\n      window: w\n    };\n  }).sort((a, b) => a.window.key === b.window.key ? 0 : a.window.key > b.window.key ? 1 : -1).map(w => /*#__PURE__*/React.createElement(TaskbarEntry, {\n    key: w.window.key,\n    w: w.window,\n    f: getReducer(w.index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }))), showStartMenu && /*#__PURE__*/React.createElement(StartMenu, {\n    reducer: getReducer(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 31\n    }\n  }));\n};\n\nexport default Windows;","map":{"version":3,"sources":["/Users/samhu/Repos/RyanSlama.com-V4/src/Windows.tsx"],"names":["React","useState","Window","TaskBar","TaskbarEntry","StartMenu","Desktop","Programs","bringToTop","idx","arr","topItem","splice","close","minimize","shouldMinimize","min","new_window","isMinimized","maximize","width","document","body","clientWidth","x","y","title","height","key","Math","random","clientHeight","setPos","setSize","launch","Windows","props","windows","setWindows","showStartMenu","setShowStartMenu","toggleStart","getReducer","i","action","console","log","type","resolvers","update","posAction","sizeAction","launchAction","visibileWindows","filter","w","map","length","findIndex","w2","index","window","sort","a","b"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './Windows.scss';\nimport { Window, AppWindow } from './Window'\nimport { TaskBar } from './Taskbar'\nimport { TaskbarEntry } from './TaskbarEntry';\nimport { StartMenu } from './StartMenu';\nimport { Desktop } from './Desktop';\nimport { Programs } from './Programs'\n\n// Brings a window to top by putting it in bottom of array\nfunction bringToTop(idx: number, arr: AppWindow[]) {\n    let topItem = arr.splice(idx, 1)\n    return [...arr, topItem[0]]\n}\n\nfunction close(idx: number, arr: AppWindow[]) {\n    arr.splice(idx, 1);\n    // Copy arr to trigger re-render\n    return [...arr]\n}\n\nfunction minimize(idx: number, arr: AppWindow[], shouldMinimize: boolean) {\n    let min = arr.splice(idx, 1)\n    let new_window = { ...(min[0]), isMinimized: shouldMinimize }\n    return shouldMinimize\n        ? [new_window, ...arr]\n        : [...arr, new_window]\n}\n\nfunction maximize(idx: number, arr: AppWindow[]) {\n    let min = arr.splice(idx, 1)[0]\n    let new_window = min.width === document.body.clientWidth ?\n        {\n            ...min,\n            x: 100,\n            y: 100,\n            width: Programs[min.title].width,\n            height: Programs[min.title].height,\n            key: Math.random()\n        } : {\n            ...min,\n            x: 0,\n            y: 0,\n            width: document.body.clientWidth,\n            height: document.body.clientHeight - 30,\n            key: Math.random()\n        }\n    return [...arr, new_window]\n}\n\nfunction setPos(idx: number, arr: AppWindow[], x: number, y: number) {\n    let min = arr.splice(idx, 1)[0]\n    let new_window = { ...min, x: x, y: y }\n    return [...arr, new_window]\n}\n\nfunction setSize(idx: number, arr: AppWindow[], x: number, y: number) {\n    let min = arr.splice(idx, 1)[0]\n    let new_window = { ...min, width: min.width + x, height: min.height + y }\n    return [...arr, new_window]\n}\n\nfunction launch(arr: AppWindow[], title: string) {\n    let new_window = {\n        title: title,\n        isMinimized: false,\n        x: 100,\n        y: 100,\n        ...Programs[title],\n        key: Math.random(),\n    }\n    return [...arr, new_window]\n}\n\ntype SimpleActionTypes =\n    | \"update\"\n    | \"close\"\n    | \"maximize\"\n    | \"minimize\"\n    | \"unminimize\"\n    | \"getFocus\"\n\ninterface SimpleAction {\n    type: SimpleActionTypes\n}\n\ninterface setPos {\n    type: \"setPos\"\n    x: number,\n    y: number\n}\n\ninterface setSize {\n    type: \"setSize\"\n    width: number,\n    height: number\n}\n\ninterface launch {\n    type: \"launch\"\n    title: string;\n}\n\ntype Action = SimpleAction | launch | setPos | setSize\n\nconst Windows = (props: { update: () => void }) => {\n\n    const [windows, setWindows] = useState([{\n        height: 400,\n        isMinimized: false,\n        key: Math.random(),\n        title: \"Internet Explorer\",\n        ...Programs[\"Internet Explorer\"],\n        x: document.body.clientWidth * 0.5,\n        y: 52,\n    }, {\n        height: 400,\n        isMinimized: false,\n        key: Math.random(),\n        title: \"Notepad\",\n        ...Programs[\"Notepad\"],\n        x: document.body.clientWidth / 15,\n        y: 405,\n    }, {\n        title: \"Getting Started\",\n        isMinimized: false,\n        x: document.body.clientWidth * 0.3,\n        y: 200,\n        ...Programs[\"Getting Started\"],\n        key: Math.random(),\n    }\n    ])\n\n    const [showStartMenu, setShowStartMenu] = useState(false)\n    const toggleStart = () => setShowStartMenu(!showStartMenu)\n\n    function getReducer(i: number) {\n        return (action: Action) => {\n            console.log(action.type);\n            console.log(i)\n            setShowStartMenu(false)\n            const resolvers: { [s: string]: (() => AppWindow[]) } = {\n                \"update\": () => {\n                    props.update();\n                    return close(i, windows);\n                },\n                \"close\": () => close(i, windows),\n                \"maximize\": () => maximize(i, windows),\n                \"minimize\": () => minimize(i, windows, true),\n                \"unminimize\": () => minimize(i, windows, false),\n                \"getFocus\": () => bringToTop(i, windows),\n                \"setPos\": () => {\n                    const posAction = action as setPos;\n                    return setPos(i, windows, posAction.x, posAction.y);\n                },\n                \"setSize\": () => {\n                    const sizeAction = action as setSize;\n                    return setSize(i, windows, sizeAction.width, sizeAction.height);\n                },\n                \"launch\": () => {\n                    const launchAction = action as launch\n                    return launch(windows, launchAction.title)\n                }\n            }\n            action.type in resolvers && setWindows(resolvers[action.type]())\n        }\n    }\n\n\n    const visibileWindows = windows.filter((w) => !w.isMinimized);\n    return (\n        <div className=\"Windows\">\n            {visibileWindows.map(((w, i) =>\n                <Window\n                    {...w}\n                    isActive={i === visibileWindows.length - 1}\n                    key={w.key}\n                    f={getReducer(windows.findIndex(w2 => w2.key === w.key))}\n                />))\n            }\n            <Desktop reducer={getReducer(-1)} hideStartMenu={() => setShowStartMenu(false)} />\n            <TaskBar startActive={showStartMenu} toggleStart={toggleStart} f={getReducer}>\n                {[...windows]\n                    .map((w, i) => { return { index: i, window: w } })\n                    .sort((a, b) => ((a.window.key === b.window.key) ? 0 : ((a.window.key > b.window.key) ? 1 : -1)))\n                    .map((w) => <TaskbarEntry key={w.window.key} w={w.window} f={getReducer(w.index)} />)\n                }\n            </TaskBar>\n            {showStartMenu && <StartMenu reducer={getReducer(-1)} />}\n        </div>\n    );\n};\n\nexport default Windows;\n"]},"metadata":{},"sourceType":"module"}